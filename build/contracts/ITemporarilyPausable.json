{
  "contractName": "ITemporarilyPausable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the TemporarilyPausable helper.\",\"events\":{\"PausedStateChanged(bool)\":{\"details\":\"Emitted every time the pause state changes by `_setPaused`.\"}},\"kind\":\"dev\",\"methods\":{\"getPausedState()\":{\"details\":\"Returns the current paused state.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":\"ITemporarilyPausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface for the TemporarilyPausable helper.\n */\ninterface ITemporarilyPausable {\n    /**\n     * @dev Emitted every time the pause state changes by `_setPaused`.\n     */\n    event PausedStateChanged(bool paused);\n\n    /**\n     * @dev Returns the current paused state.\n     */\n    function getPausedState()\n        external\n        view\n        returns (\n            bool paused,\n            uint256 pauseWindowEndTime,\n            uint256 bufferPeriodEndTime\n        );\n}\n",
  "sourcePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
  "ast": {
    "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
    "exportedSymbols": {
      "ITemporarilyPausable": [
        3019
      ]
    },
    "id": 3020,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3002,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "688:23:11"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3003,
          "nodeType": "StructuredDocumentation",
          "src": "713:61:11",
          "text": " @dev Interface for the TemporarilyPausable helper."
        },
        "fullyImplemented": false,
        "id": 3019,
        "linearizedBaseContracts": [
          3019
        ],
        "name": "ITemporarilyPausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3004,
              "nodeType": "StructuredDocumentation",
              "src": "812:83:11",
              "text": " @dev Emitted every time the pause state changes by `_setPaused`."
            },
            "id": 3008,
            "name": "PausedStateChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3006,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 3008,
                  "src": "925:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3005,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:13:11"
            },
            "src": "900:38:11"
          },
          {
            "documentation": {
              "id": 3009,
              "nodeType": "StructuredDocumentation",
              "src": "944:57:11",
              "text": " @dev Returns the current paused state."
            },
            "functionSelector": "1c0de051",
            "id": 3018,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPausedState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:2:11"
            },
            "returnParameters": {
              "id": 3017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "mutability": "mutable",
                  "name": "paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 3018,
                  "src": "1092:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3014,
                  "mutability": "mutable",
                  "name": "pauseWindowEndTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3018,
                  "src": "1117:26:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3016,
                  "mutability": "mutable",
                  "name": "bufferPeriodEndTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3018,
                  "src": "1157:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:116:11"
            },
            "scope": 3019,
            "src": "1006:189:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3020,
        "src": "775:422:11"
      }
    ],
    "src": "688:510:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol",
      "exportedSymbols": {
        "ITemporarilyPausable": [
          3019
        ]
      },
      "license": "GPL-3.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 3002,
        "name": "PragmaDirective",
        "src": "688:23:11"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            3019
          ],
          "name": "ITemporarilyPausable",
          "scope": 3020
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Interface for the TemporarilyPausable helper."
            },
            "id": 3003,
            "name": "StructuredDocumentation",
            "src": "713:61:11"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "PausedStateChanged"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Emitted every time the pause state changes by `_setPaused`."
                },
                "id": 3004,
                "name": "StructuredDocumentation",
                "src": "812:83:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "paused",
                      "scope": 3008,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3005,
                        "name": "ElementaryTypeName",
                        "src": "925:4:11"
                      }
                    ],
                    "id": 3006,
                    "name": "VariableDeclaration",
                    "src": "925:11:11"
                  }
                ],
                "id": 3007,
                "name": "ParameterList",
                "src": "924:13:11"
              }
            ],
            "id": 3008,
            "name": "EventDefinition",
            "src": "900:38:11"
          },
          {
            "attributes": {
              "functionSelector": "1c0de051",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPausedState",
              "scope": 3019,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the current paused state."
                },
                "id": 3009,
                "name": "StructuredDocumentation",
                "src": "944:57:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3010,
                "name": "ParameterList",
                "src": "1029:2:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "paused",
                      "scope": 3018,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 3011,
                        "name": "ElementaryTypeName",
                        "src": "1092:4:11"
                      }
                    ],
                    "id": 3012,
                    "name": "VariableDeclaration",
                    "src": "1092:11:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "pauseWindowEndTime",
                      "scope": 3018,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3013,
                        "name": "ElementaryTypeName",
                        "src": "1117:7:11"
                      }
                    ],
                    "id": 3014,
                    "name": "VariableDeclaration",
                    "src": "1117:26:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "bufferPeriodEndTime",
                      "scope": 3018,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3015,
                        "name": "ElementaryTypeName",
                        "src": "1157:7:11"
                      }
                    ],
                    "id": 3016,
                    "name": "VariableDeclaration",
                    "src": "1157:27:11"
                  }
                ],
                "id": 3017,
                "name": "ParameterList",
                "src": "1078:116:11"
              }
            ],
            "id": 3018,
            "name": "FunctionDefinition",
            "src": "1006:189:11"
          }
        ],
        "id": 3019,
        "name": "ContractDefinition",
        "src": "775:422:11"
      }
    ],
    "id": 3020,
    "name": "SourceUnit",
    "src": "688:510:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-19T22:46:59.481Z",
  "devdoc": {
    "details": "Interface for the TemporarilyPausable helper.",
    "events": {
      "PausedStateChanged(bool)": {
        "details": "Emitted every time the pause state changes by `_setPaused`."
      }
    },
    "kind": "dev",
    "methods": {
      "getPausedState()": {
        "details": "Returns the current paused state."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}