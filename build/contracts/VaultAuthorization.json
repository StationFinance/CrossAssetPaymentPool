{
  "contractName": "VaultAuthorization",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "AuthorizerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ExternalBalanceTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "InternalBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "PausedStateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "deltas",
          "type": "int256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "protocolFeeAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "PoolBalanceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "cashDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "managedDelta",
          "type": "int256"
        }
      ],
      "name": "PoolBalanceManaged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "RelayerApprovalChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokensDeregistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "TokensRegistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "int256[]",
          "name": "limits",
          "type": "int256[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "batchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "",
          "type": "int256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "deregisterTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minAmountsOut",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.ExitPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "exitPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlashLoanRecipient",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "getActionId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "getInternalBalance",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNextNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPausedState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "pauseWindowEndTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bufferPeriodEndTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPoolTokenInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "managed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        }
      ],
      "name": "getPoolTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "lastChangeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolFeesCollector",
      "outputs": [
        {
          "internalType": "contract IProtocolFeesCollector",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxAmountsIn",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.JoinPoolRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "joinPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.PoolBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.PoolBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "managePoolBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum IVault.UserBalanceOpKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "internalType": "struct IVault.UserBalanceOp[]",
          "name": "ops",
          "type": "tuple[]"
        }
      ],
      "name": "manageUserBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.SwapKind",
          "name": "kind",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "assetInIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetOutIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.BatchSwapStep[]",
          "name": "swaps",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IAsset[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        }
      ],
      "name": "queryBatchSwap",
      "outputs": [
        {
          "internalType": "int256[]",
          "name": "assetDeltas",
          "type": "int256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IVault.PoolSpecialization",
          "name": "specialization",
          "type": "uint8"
        }
      ],
      "name": "registerPool",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "poolId",
          "type": "bytes32"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        }
      ],
      "name": "registerTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "poolId",
              "type": "bytes32"
            },
            {
              "internalType": "enum IVault.SwapKind",
              "name": "kind",
              "type": "uint8"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetIn",
              "type": "address"
            },
            {
              "internalType": "contract IAsset",
              "name": "assetOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "internalType": "struct IVault.SingleSwap",
          "name": "singleSwap",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "fromInternalBalance",
              "type": "bool"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "toInternalBalance",
              "type": "bool"
            }
          ],
          "internalType": "struct IVault.FundManagement",
          "name": "funds",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "newAuthorizer",
          "type": "address"
        }
      ],
      "name": "setAuthorizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuthorizer",
      "outputs": [
        {
          "internalType": "contract IAuthorizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setRelayerApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        }
      ],
      "name": "hasApprovedRelayer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"AuthorizerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExternalBalanceTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"InternalBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"deltas\",\"type\":\"int256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"protocolFeeAmounts\",\"type\":\"uint256[]\"}],\"name\":\"PoolBalanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cashDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"managedDelta\",\"type\":\"int256\"}],\"name\":\"PoolBalanceManaged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"RelayerApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokensDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"TokensRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"int256[]\",\"name\":\"limits\",\"type\":\"int256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"deregisterTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"exitPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlashLoanRecipient\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"getActionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizer\",\"outputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getInternalBalance\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPausedState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"pauseWindowEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bufferPeriodEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolTokenInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"getPoolTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"lastChangeBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeesCollector\",\"outputs\":[{\"internalType\":\"contract IProtocolFeesCollector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"hasApprovedRelayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.PoolBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.PoolBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"managePoolBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IVault.UserBalanceOpKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"internalType\":\"struct IVault.UserBalanceOp[]\",\"name\":\"ops\",\"type\":\"tuple[]\"}],\"name\":\"manageUserBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"}],\"name\":\"queryBatchSwap\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"assetDeltas\",\"type\":\"int256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IVault.PoolSpecialization\",\"name\":\"specialization\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"}],\"name\":\"registerTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthorizer\",\"name\":\"newAuthorizer\",\"type\":\"address\"}],\"name\":\"setAuthorizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setRelayerApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"enum IVault.SwapKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"contract IAsset\",\"name\":\"assetOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.SingleSwap\",\"name\":\"singleSwap\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages access control of Vault permissioned functions by relying on the Authorizer and signature validation. Additionally handles relayer access and approval.\",\"kind\":\"dev\",\"methods\":{\"WETH()\":{\"details\":\"Returns the Vault's WETH instance.\"},\"batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)\":{\"details\":\"Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events.\"},\"deregisterTokens(bytes32,address[])\":{\"details\":\"Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event.\"},\"exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event.\"},\"flashLoan(address,address[],uint256[],bytes)\":{\"details\":\"Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events.\"},\"getActionId(bytes4)\":{\"details\":\"Returns the action identifier associated with the external function described by `selector`.\"},\"getAuthorizer()\":{\"details\":\"Returns the Vault's Authorizer.\"},\"getDomainSeparator()\":{\"details\":\"Returns the EIP712 domain separator.\"},\"getInternalBalance(address,address[])\":{\"details\":\"Returns `user`'s Internal Balance for a set of tokens.\"},\"getNextNonce(address)\":{\"details\":\"Returns the next nonce used by an address to sign messages.\"},\"getPausedState()\":{\"details\":\"Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period.\"},\"getPool(bytes32)\":{\"details\":\"Returns a Pool's contract address and specialization setting.\"},\"getPoolTokenInfo(bytes32,address)\":{\"details\":\"Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager.\"},\"getPoolTokens(bytes32)\":{\"details\":\"Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead.\"},\"getProtocolFeesCollector()\":{\"details\":\"Returns the current protocol fee module.\"},\"hasApprovedRelayer(address,address)\":{\"details\":\"Returns true if `user` has approved `relayer` to act as a relayer for them.\"},\"joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))\":{\"details\":\"Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event.\"},\"managePoolBalance((uint8,bytes32,address,uint256)[])\":{\"details\":\"Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`.\"},\"manageUserBalance((uint8,address,uint256,address,address)[])\":{\"details\":\"Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them.\"},\"queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))\":{\"details\":\"Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction.\"},\"registerPool(uint8)\":{\"details\":\"Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event.\"},\"registerTokens(bytes32,address[],address[])\":{\"details\":\"Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event.\"},\"setAuthorizer(address)\":{\"details\":\"Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event.\"},\"setPaused(bool)\":{\"details\":\"Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited.\"},\"setRelayerApproval(address,address,bool)\":{\"details\":\"Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event.\"},\"swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)\":{\"details\":\"Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/node_modules/@balancer-labs/v2-vault/contracts/VaultAuthorization.sol\":\"VaultAuthorization\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol\":{\"keccak256\":\"0xea892213ec2967f53e26a0dd833bde01e4d9b6e49dd91e6c59ff00044f83c28d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0bc36f6335254bef8a4515e898a7ce5b3f36350e4d7d1dd45a0aa3d1356fdae5\",\"dweb:/ipfs/QmRRatu77hTPReUnRidk3wjgEMyGYVgh9wDrkiMiKmtWtR\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\":{\"keccak256\":\"0x905bd095ec81b0ae31c85b234d0b6ef2b51c49b6ed8e3ae49f13466825e82d2a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://caa51272d7427f1d0e3cc715c93e887c01b4d4b2d6177d0bae5c2088508a7da9\",\"dweb:/ipfs/QmVgHKqzKZFKyKaStmkF31ffEvArkzpGj1xLAwrg13ytW9\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/IAuthentication.sol\":{\"keccak256\":\"0xfd687ced203d2c6da8189792e1719a5182faf45956129388b231ee76740b99a6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://581aa664e84e950cd9bb747bf6022867db63c64f67d9556a86b5f04f871c2c5d\",\"dweb:/ipfs/QmRa6EEV3LXJaHzymztiLqyeAzmE4jAgBEEi3mi8R5cfFa\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x2fe46b13b7c8bfc6f5c539c0b73d6325813f383f551b71fb6bca8dafd06964e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8e651ae7a3a3652c8bb7aaa42c2cce5924310df62a923d9ec50ddb9c850d2995\",\"dweb:/ipfs/QmTHz9y18L5FD7v9GcvxGWSLJuin2KCUEYoARTgz8njce8\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xb3e5b7c63f80b80ef3f0138eac56c397a439bf6b667fc06d5061aa869828b562\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://978d66fba0721a1a67e29a32eaddab8d1f92ab2fb2d611724ea8d0d3c9b0e95b\",\"dweb:/ipfs/QmfG4foZvx3NDZao7d4VvGzL4Uxtk8VWNJXvgo9fiAJxZv\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol\":{\"keccak256\":\"0x1b370c5532ea1439d3c2d66ab993cc4851921d9aa38f0639a81a2d04113077dd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5d7fe92b224f90cb49204f04db3e71103eeea885df8562a9e886a73f6acbeea9\",\"dweb:/ipfs/QmXb4NEm8DAjUecZ3qKn9QY2vencdpdEE6ytfmLi4egT3u\"]},\"@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol\":{\"keccak256\":\"0xd20f7cbc60072fc73aa137ce644777195de3143bc6ce910c43501647f3ce6c60\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b3c5a3589b0d85a051977e77e1fe1e9b41c4d005a8a4ac3156995e9fddd9d926\",\"dweb:/ipfs/QmZwwhQQFL9tK1vNBTKB4E5ZGBdwfgGrgv2fjHgBaZTENi\"]},\"@balancer-labs/v2-solidity-utils/contracts/misc/IWETH.sol\":{\"keccak256\":\"0x19a0628bedbe48178a4c90509a40d750d5039677b964ec533a24361a8d97274b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c55887c89f152f00e5d65389061de28fada0e73eb5f41ebd16a3b8e65846cb1a\",\"dweb:/ipfs/QmNbVtaA44BGvKnKiCT4bEtjZu1ZD5ZJ6XrgBDh5qVEGcP\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/EIP712.sol\":{\"keccak256\":\"0x0cf3ec5d6130aac057e69df14b1ff87baf9c6c2cb13bc545952def004e629ac0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://446419367266d271bf6953e4ae0423356a5cc4717f7b9a5a0532436de4be2d70\",\"dweb:/ipfs/QmPV56wHs1Mqif6et6TYrhZ2QYPNmiVTmXWvQMhqWfKLk9\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\":{\"keccak256\":\"0xfe6da463cd5a6df10b49020a69b0978a4ef65d029e747c515062ec4a3359c464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203824853ae4896a6216d53aa537a6941c9992d528c9aa4dd385114dac0f169c\",\"dweb:/ipfs/Qmdb6pN9EVQVHFkxfdMoWUKmRMx7BtVzqcXUqGJh8Xotgy\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/VaultAuthorization.sol\":{\"keccak256\":\"0x6aa476e089693e9997c3fb2edfe75cd7e2cf627e5cdad28482723a9d9a77cbbb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b5e4fe9896325b5ab2465f2f04c4fe2545356d5f12a29ae5651211e936c1239b\",\"dweb:/ipfs/Qmai9rYaduJ6QAZjmG1WPP4Te4R3uCSVCBQe2YCj4S7Q9k\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x70ecf1d48c285d78718bd2e159345677038ed8a81c74444bedd6a5c61af9aff6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8c7c210e449ea5d284abeaaed82e3bb3c203b57d8b3e5dfb6daedf76eaae31d1\",\"dweb:/ipfs/QmfJWLPhCG6PcHNJMLNDbAM6nd2ZVFCexCXvJ9qQmRaNbn\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol\":{\"keccak256\":\"0x792871e208bba1dad291f8d1cffad86f4afa5e2360816bd9c43481f7297155f5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://af8ab65258e294c8ba0a5feee91208789f641181d225364b02123d38d9eec7d0\",\"dweb:/ipfs/Qmb5HUXRaSrHJafwK1H8XRjcCTnAZMShTvBNhr1ovA1j2m\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xacad6dfbdf2395aeb8b793b3cb5d9ee2702d8d5f667084ff7bfa248f64700f47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b8a27ce7efd29cb653529a2e2c6a828f5bd973b286dc166d12a8f81426bca68a\",\"dweb:/ipfs/QmPFuddzXwjK58qDG4z1n9S9Yff865yCToAStRbdfWMo1D\"]},\"project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x8a0904cb11d6571fdc0051b2de6b675d0e1cf8af45c1a5467d047812f1086223\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e428d19d1bd18504c5c8a797b0a80515072f4d7fc278df73b9fec0ab8efe155d\",\"dweb:/ipfs/QmYeJPPQKAckBVvuhU9XXiZR4aSrVNu3WcfTmSsXJJYey3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol\";\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol\";\n\nimport \"./interfaces/IVault.sol\";\nimport \"./interfaces/IAuthorizer.sol\";\n\n/**\n * @dev Manages access control of Vault permissioned functions by relying on the Authorizer and signature validation.\n *\n * Additionally handles relayer access and approval.\n */\nabstract contract VaultAuthorization is\n    IVault,\n    ReentrancyGuard,\n    Authentication,\n    SignaturesValidator,\n    TemporarilyPausable\n{\n    // Ideally, we'd store the type hashes as immutable state variables to avoid computing the hash at runtime, but\n    // unfortunately immutable variables cannot be used in assembly, so we just keep the precomputed hashes instead.\n\n    // _JOIN_TYPE_HASH = keccak256(\"JoinPool(bytes calldata,address sender,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant _JOIN_TYPE_HASH = 0x3f7b71252bd19113ff48c19c6e004a9bcfcca320a0d74d58e85877cbd7dcae58;\n\n    // _EXIT_TYPE_HASH = keccak256(\"ExitPool(bytes calldata,address sender,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant _EXIT_TYPE_HASH = 0x8bbc57f66ea936902f50a71ce12b92c43f3c5340bb40c27c4e90ab84eeae3353;\n\n    // _SWAP_TYPE_HASH = keccak256(\"Swap(bytes calldata,address sender,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant _SWAP_TYPE_HASH = 0xe192dcbc143b1e244ad73b813fd3c097b832ad260a157340b4e5e5beda067abe;\n\n    // _BATCH_SWAP_TYPE_HASH = keccak256(\"BatchSwap(bytes calldata,address sender,uint256 nonce,uint256 deadline)\");\n    bytes32 private constant _BATCH_SWAP_TYPE_HASH = 0x9bfc43a4d98313c6766986ffd7c916c7481566d9f224c6819af0a53388aced3a;\n\n    // _SET_RELAYER_TYPE_HASH =\n    //     keccak256(\"SetRelayerApproval(bytes calldata,address sender,uint256 nonce,uint256 deadline)\");\n    bytes32\n        private constant _SET_RELAYER_TYPE_HASH = 0xa3f865aa351e51cfeb40f5178d1564bb629fe9030b83caf6361d1baaf5b90b5a;\n\n    IAuthorizer private _authorizer;\n    mapping(address => mapping(address => bool)) private _approvedRelayers;\n\n    /**\n     * @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call this function (that\n     * is, it is a relayer for that function), and either:\n     *  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n     *  b) a valid signature from them was appended to the calldata.\n     *\n     * Should only be applied to external functions.\n     */\n    modifier authenticateFor(address user) {\n        _authenticateFor(user);\n        _;\n    }\n\n    constructor(IAuthorizer authorizer)\n        // The Vault is a singleton, so it simply uses its own address to disambiguate action identifiers.\n        Authentication(bytes32(uint256(address(this))))\n        SignaturesValidator(\"Balancer V2 Vault\")\n    {\n        _setAuthorizer(authorizer);\n    }\n\n    function setAuthorizer(IAuthorizer newAuthorizer) external override nonReentrant authenticate {\n        _setAuthorizer(newAuthorizer);\n    }\n\n    function _setAuthorizer(IAuthorizer newAuthorizer) private {\n        emit AuthorizerChanged(newAuthorizer);\n        _authorizer = newAuthorizer;\n    }\n\n    function getAuthorizer() external view override returns (IAuthorizer) {\n        return _authorizer;\n    }\n\n    function setRelayerApproval(\n        address sender,\n        address relayer,\n        bool approved\n    ) external override nonReentrant whenNotPaused authenticateFor(sender) {\n        _approvedRelayers[sender][relayer] = approved;\n        emit RelayerApprovalChanged(relayer, sender, approved);\n    }\n\n    function hasApprovedRelayer(address user, address relayer) external view override returns (bool) {\n        return _hasApprovedRelayer(user, relayer);\n    }\n\n    /**\n     * @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call the entry point\n     * function (that is, it is a relayer for that function) and either:\n     *  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n     *  b) a valid signature from them was appended to the calldata.\n     */\n    function _authenticateFor(address user) internal {\n        if (msg.sender != user) {\n            // In this context, 'permission to call a function' means 'being a relayer for a function'.\n            _authenticateCaller();\n\n            // Being a relayer is not sufficient: `user` must have also approved the caller either via\n            // `setRelayerApproval`, or by providing a signature appended to the calldata.\n            if (!_hasApprovedRelayer(user, msg.sender)) {\n                _validateSignature(user, Errors.USER_DOESNT_ALLOW_RELAYER);\n            }\n        }\n    }\n\n    /**\n     * @dev Returns true if `user` approved `relayer` to act as a relayer for them.\n     */\n    function _hasApprovedRelayer(address user, address relayer) internal view returns (bool) {\n        return _approvedRelayers[user][relayer];\n    }\n\n    function _canPerform(bytes32 actionId, address user) internal view override returns (bool) {\n        // Access control is delegated to the Authorizer.\n        return _authorizer.canPerform(actionId, user, address(this));\n    }\n\n    function _typeHash() internal pure override returns (bytes32 hash) {\n        // This is a simple switch-case statement, trivially written in Solidity by chaining else-if statements, but the\n        // assembly implementation results in much denser bytecode.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // The function selector is located at the first 4 bytes of calldata. We copy the first full calldata\n            // 256 word, and then perform a logical shift to the right, moving the selector to the least significant\n            // 4 bytes.\n            let selector := shr(224, calldataload(0))\n\n            // With the selector in the least significant 4 bytes, we can use 4 byte literals with leading zeros,\n            // resulting in dense bytecode (PUSH4 opcodes).\n            switch selector\n                case 0xb95cac28 {\n                    hash := _JOIN_TYPE_HASH\n                }\n                case 0x8bdb3913 {\n                    hash := _EXIT_TYPE_HASH\n                }\n                case 0x52bbbe29 {\n                    hash := _SWAP_TYPE_HASH\n                }\n                case 0x945bcec9 {\n                    hash := _BATCH_SWAP_TYPE_HASH\n                }\n                case 0xfa6e671d {\n                    hash := _SET_RELAYER_TYPE_HASH\n                }\n                default {\n                    hash := 0x0000000000000000000000000000000000000000000000000000000000000000\n                }\n        }\n    }\n}\n",
  "sourcePath": "/home/tatsu/Station/CrossAssetPaymentPool/node_modules/@balancer-labs/v2-vault/contracts/VaultAuthorization.sol",
  "ast": {
    "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/VaultAuthorization.sol",
    "exportedSymbols": {
      "VaultAuthorization": [
        17221
      ]
    },
    "id": 17222,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16979,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "688:23:68"
      },
      {
        "id": 16980,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "712:33:68"
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
        "id": 16981,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 2972,
        "src": "747:79:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol",
        "id": 16982,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 2645,
        "src": "827:79:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol",
        "id": 16983,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 3563,
        "src": "907:84:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
        "id": 16984,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 2972,
        "src": "992:79:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol",
        "id": 16985,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 3383,
        "src": "1072:84:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
        "id": 16986,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 7212,
        "src": "1157:85:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
        "file": "./interfaces/IVault.sol",
        "id": 16987,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 20135,
        "src": "1244:33:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol",
        "file": "./interfaces/IAuthorizer.sol",
        "id": 16988,
        "nodeType": "ImportDirective",
        "scope": 17222,
        "sourceUnit": 19464,
        "src": "1278:38:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 16990,
              "name": "IVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20134,
              "src": "1544:6:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$20134",
                "typeString": "contract IVault"
              }
            },
            "id": 16991,
            "nodeType": "InheritanceSpecifier",
            "src": "1544:6:68"
          },
          {
            "baseName": {
              "id": 16992,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7211,
              "src": "1556:15:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$7211",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 16993,
            "nodeType": "InheritanceSpecifier",
            "src": "1556:15:68"
          },
          {
            "baseName": {
              "id": 16994,
              "name": "Authentication",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2644,
              "src": "1577:14:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Authentication_$2644",
                "typeString": "contract Authentication"
              }
            },
            "id": 16995,
            "nodeType": "InheritanceSpecifier",
            "src": "1577:14:68"
          },
          {
            "baseName": {
              "id": 16996,
              "name": "SignaturesValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3382,
              "src": "1597:19:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SignaturesValidator_$3382",
                "typeString": "contract SignaturesValidator"
              }
            },
            "id": 16997,
            "nodeType": "InheritanceSpecifier",
            "src": "1597:19:68"
          },
          {
            "baseName": {
              "id": 16998,
              "name": "TemporarilyPausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3562,
              "src": "1622:19:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TemporarilyPausable_$3562",
                "typeString": "contract TemporarilyPausable"
              }
            },
            "id": 16999,
            "nodeType": "InheritanceSpecifier",
            "src": "1622:19:68"
          }
        ],
        "contractDependencies": [
          2644,
          2982,
          3000,
          3019,
          3382,
          3562,
          5914,
          7211,
          20134
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 16989,
          "nodeType": "StructuredDocumentation",
          "src": "1318:181:68",
          "text": " @dev Manages access control of Vault permissioned functions by relying on the Authorizer and signature validation.\n Additionally handles relayer access and approval."
        },
        "fullyImplemented": false,
        "id": 17221,
        "linearizedBaseContracts": [
          17221,
          3562,
          3382,
          5914,
          2644,
          2982,
          7211,
          20134,
          3019,
          3000
        ],
        "name": "VaultAuthorization",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 17002,
            "mutability": "constant",
            "name": "_JOIN_TYPE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "1992:109:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17000,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1992:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307833663762373132353262643139313133666634386331396336653030346139626366636361333230613064373464353865383538373763626437646361653538",
              "id": 17001,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2035:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_28713812549183377044748713259476995946841408553939056548680640663573646585432_by_1",
                "typeString": "int_const 2871...(69 digits omitted)...5432"
              },
              "value": "0x3f7b71252bd19113ff48c19c6e004a9bcfcca320a0d74d58e85877cbd7dcae58"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 17005,
            "mutability": "constant",
            "name": "_EXIT_TYPE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "2218:109:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17003,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2218:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307838626263353766363665613933363930326635306137316365313262393263343366336335333430626234306332376334653930616238346565616533333533",
              "id": 17004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2261:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_63204260296985377466765927530391367930153876605403162929682898597016582894419_by_1",
                "typeString": "int_const 6320...(69 digits omitted)...4419"
              },
              "value": "0x8bbc57f66ea936902f50a71ce12b92c43f3c5340bb40c27c4e90ab84eeae3353"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 17008,
            "mutability": "constant",
            "name": "_SWAP_TYPE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "2440:109:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17006,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2440:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307865313932646362633134336231653234346164373362383133666433633039376238333261643236306131353733343062346535653562656461303637616265",
              "id": 17007,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2483:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_102029874057489414306014326180932457930791105430947960193060447830035067730622_by_1",
                "typeString": "int_const 1020...(70 digits omitted)...0622"
              },
              "value": "0xe192dcbc143b1e244ad73b813fd3c097b832ad260a157340b4e5e5beda067abe"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 17011,
            "mutability": "constant",
            "name": "_BATCH_SWAP_TYPE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "2673:115:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17009,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2673:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307839626663343361346439383331336336373636393836666664376339313663373438313536366439663232346336383139616630613533333838616365643361",
              "id": 17010,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2722:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70554203852073620773320542884815015319480942240002975956078883761200594480442_by_1",
                "typeString": "int_const 7055...(69 digits omitted)...0442"
              },
              "value": "0x9bfc43a4d98313c6766986ffd7c916c7481566d9f224c6819af0a53388aced3a"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 17014,
            "mutability": "constant",
            "name": "_SET_RELAYER_TYPE_HASH",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "2933:124:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 17012,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2933:7:68",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307861336638363561613335316535316366656234306635313738643135363462623632396665393033306238336361663633363164316261616635623930623561",
              "id": 17013,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2991:66:68",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_74165874056303444090863280954102338647354415430482625780053785737906936679258_by_1",
                "typeString": "int_const 7416...(69 digits omitted)...9258"
              },
              "value": "0xa3f865aa351e51cfeb40f5178d1564bb629fe9030b83caf6361d1baaf5b90b5a"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17016,
            "mutability": "mutable",
            "name": "_authorizer",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "3064:31:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAuthorizer_$19463",
              "typeString": "contract IAuthorizer"
            },
            "typeName": {
              "id": 17015,
              "name": "IAuthorizer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19463,
              "src": "3064:11:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                "typeString": "contract IAuthorizer"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17022,
            "mutability": "mutable",
            "name": "_approvedRelayers",
            "nodeType": "VariableDeclaration",
            "scope": 17221,
            "src": "3101:70:68",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 17021,
              "keyType": {
                "id": 17017,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3109:7:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3101:44:68",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 17020,
                "keyType": {
                  "id": 17018,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3128:7:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3120:24:68",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 17019,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3139:4:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 17032,
              "nodeType": "Block",
              "src": "3624:50:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17028,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17025,
                        "src": "3651:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17027,
                      "name": "_authenticateFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17174,
                      "src": "3634:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 17029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:22:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17030,
                  "nodeType": "ExpressionStatement",
                  "src": "3634:22:68"
                },
                {
                  "id": 17031,
                  "nodeType": "PlaceholderStatement",
                  "src": "3666:1:68"
                }
              ]
            },
            "documentation": {
              "id": 17023,
              "nodeType": "StructuredDocumentation",
              "src": "3178:402:68",
              "text": " @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call this function (that\n is, it is a relayer for that function), and either:\n  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n  b) a valid signature from them was appended to the calldata.\n Should only be applied to external functions."
            },
            "id": 17033,
            "name": "authenticateFor",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 17026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17025,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 17033,
                  "src": "3610:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:14:68"
            },
            "src": "3585:89:68",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17057,
              "nodeType": "Block",
              "src": "3932:43:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17054,
                        "name": "authorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17035,
                        "src": "3957:10:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      ],
                      "id": 17053,
                      "name": "_setAuthorizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17087,
                      "src": "3942:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAuthorizer_$19463_$returns$__$",
                        "typeString": "function (contract IAuthorizer)"
                      }
                    },
                    "id": 17055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3942:26:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17056,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:26:68"
                }
              ]
            },
            "id": 17058,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 17044,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3870:4:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                                  "typeString": "contract VaultAuthorization"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                                  "typeString": "contract VaultAuthorization"
                                }
                              ],
                              "id": 17043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3862:7:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 17042,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3862:7:68",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 17045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3862:13:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3854:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 17040,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3854:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3854:22:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3846:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 17038,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3846:7:68",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 17047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 17048,
                "modifierName": {
                  "id": 17037,
                  "name": "Authentication",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2644,
                  "src": "3831:14:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Authentication_$2644_$",
                    "typeString": "type(contract Authentication)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3831:47:68"
              },
              {
                "arguments": [
                  {
                    "hexValue": "42616c616e636572205632205661756c74",
                    "id": 17050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3907:19:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_546d0ab49c5920e3fe063e6971dd456a095183a2e20611f1b5815c7a1f43f069",
                      "typeString": "literal_string \"Balancer V2 Vault\""
                    },
                    "value": "Balancer V2 Vault"
                  }
                ],
                "id": 17051,
                "modifierName": {
                  "id": 17049,
                  "name": "SignaturesValidator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3382,
                  "src": "3887:19:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SignaturesValidator_$3382_$",
                    "typeString": "type(contract SignaturesValidator)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3887:40:68"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17035,
                  "mutability": "mutable",
                  "name": "authorizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17058,
                  "src": "3692:22:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                    "typeString": "contract IAuthorizer"
                  },
                  "typeName": {
                    "id": 17034,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19463,
                    "src": "3692:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3691:24:68"
            },
            "returnParameters": {
              "id": 17052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3932:0:68"
            },
            "scope": 17221,
            "src": "3680:295:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              19700
            ],
            "body": {
              "id": 17072,
              "nodeType": "Block",
              "src": "4075:46:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17069,
                        "name": "newAuthorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17060,
                        "src": "4100:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      ],
                      "id": 17068,
                      "name": "_setAuthorizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17087,
                      "src": "4085:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IAuthorizer_$19463_$returns$__$",
                        "typeString": "function (contract IAuthorizer)"
                      }
                    },
                    "id": 17070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4085:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17071,
                  "nodeType": "ExpressionStatement",
                  "src": "4085:29:68"
                }
              ]
            },
            "functionSelector": "058a628f",
            "id": 17073,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17064,
                "modifierName": {
                  "id": 17063,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7186,
                  "src": "4049:12:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4049:12:68"
              },
              {
                "id": 17066,
                "modifierName": {
                  "id": 17065,
                  "name": "authenticate",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2595,
                  "src": "4062:12:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4062:12:68"
              }
            ],
            "name": "setAuthorizer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17062,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4040:8:68"
            },
            "parameters": {
              "id": 17061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17060,
                  "mutability": "mutable",
                  "name": "newAuthorizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17073,
                  "src": "4004:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                    "typeString": "contract IAuthorizer"
                  },
                  "typeName": {
                    "id": 17059,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19463,
                    "src": "4004:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4003:27:68"
            },
            "returnParameters": {
              "id": 17067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4075:0:68"
            },
            "scope": 17221,
            "src": "3981:140:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17086,
              "nodeType": "Block",
              "src": "4186:91:68",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17079,
                        "name": "newAuthorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17075,
                        "src": "4219:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      ],
                      "id": 17078,
                      "name": "AuthorizerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19705,
                      "src": "4201:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IAuthorizer_$19463_$returns$__$",
                        "typeString": "function (contract IAuthorizer)"
                      }
                    },
                    "id": 17080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17081,
                  "nodeType": "EmitStatement",
                  "src": "4196:37:68"
                },
                {
                  "expression": {
                    "id": 17084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17082,
                      "name": "_authorizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17016,
                      "src": "4243:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                        "typeString": "contract IAuthorizer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17083,
                      "name": "newAuthorizer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17075,
                      "src": "4257:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                        "typeString": "contract IAuthorizer"
                      }
                    },
                    "src": "4243:27:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "id": 17085,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:27:68"
                }
              ]
            },
            "id": 17087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAuthorizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17075,
                  "mutability": "mutable",
                  "name": "newAuthorizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17087,
                  "src": "4151:25:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                    "typeString": "contract IAuthorizer"
                  },
                  "typeName": {
                    "id": 17074,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19463,
                    "src": "4151:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4150:27:68"
            },
            "returnParameters": {
              "id": 17077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4186:0:68"
            },
            "scope": 17221,
            "src": "4127:150:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              19694
            ],
            "body": {
              "id": 17095,
              "nodeType": "Block",
              "src": "4353:35:68",
              "statements": [
                {
                  "expression": {
                    "id": 17093,
                    "name": "_authorizer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17016,
                    "src": "4370:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "functionReturnParameters": 17092,
                  "id": 17094,
                  "nodeType": "Return",
                  "src": "4363:18:68"
                }
              ]
            },
            "functionSelector": "aaabadc5",
            "id": 17096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAuthorizer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4322:8:68"
            },
            "parameters": {
              "id": 17088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4305:2:68"
            },
            "returnParameters": {
              "id": 17092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17091,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17096,
                  "src": "4340:11:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                    "typeString": "contract IAuthorizer"
                  },
                  "typeName": {
                    "id": 17090,
                    "name": "IAuthorizer",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 19463,
                    "src": "4340:11:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                      "typeString": "contract IAuthorizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4339:13:68"
            },
            "scope": 17221,
            "src": "4283:105:68",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19725
            ],
            "body": {
              "id": 17127,
              "nodeType": "Block",
              "src": "4569:126:68",
              "statements": [
                {
                  "expression": {
                    "id": 17119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 17113,
                          "name": "_approvedRelayers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17022,
                          "src": "4579:17:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 17116,
                        "indexExpression": {
                          "id": 17114,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17098,
                          "src": "4597:6:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4579:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 17117,
                      "indexExpression": {
                        "id": 17115,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17100,
                        "src": "4605:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4579:34:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17118,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17102,
                      "src": "4616:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4579:45:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17120,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:45:68"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 17122,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17100,
                        "src": "4662:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17123,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17098,
                        "src": "4671:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17124,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17102,
                        "src": "4679:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17121,
                      "name": "RelayerApprovalChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19734,
                      "src": "4639:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 17125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4639:49:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17126,
                  "nodeType": "EmitStatement",
                  "src": "4634:54:68"
                }
              ]
            },
            "functionSelector": "fa6e671d",
            "id": 17128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 17106,
                "modifierName": {
                  "id": 17105,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7186,
                  "src": "4518:12:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4518:12:68"
              },
              {
                "id": 17108,
                "modifierName": {
                  "id": 17107,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3450,
                  "src": "4531:13:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4531:13:68"
              },
              {
                "arguments": [
                  {
                    "id": 17110,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17098,
                    "src": "4561:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 17111,
                "modifierName": {
                  "id": 17109,
                  "name": "authenticateFor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17033,
                  "src": "4545:15:68",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4545:23:68"
              }
            ],
            "name": "setRelayerApproval",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4509:8:68"
            },
            "parameters": {
              "id": 17103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17098,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 17128,
                  "src": "4431:14:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17100,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17128,
                  "src": "4455:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4455:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17102,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 17128,
                  "src": "4480:13:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4421:78:68"
            },
            "returnParameters": {
              "id": 17112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:0:68"
            },
            "scope": 17221,
            "src": "4394:301:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19715
            ],
            "body": {
              "id": 17143,
              "nodeType": "Block",
              "src": "4798:58:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17139,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17130,
                        "src": "4835:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17140,
                        "name": "relayer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17132,
                        "src": "4841:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17138,
                      "name": "_hasApprovedRelayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17191,
                      "src": "4815:19:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 17141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4815:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17137,
                  "id": 17142,
                  "nodeType": "Return",
                  "src": "4808:41:68"
                }
              ]
            },
            "functionSelector": "fec90d72",
            "id": 17144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasApprovedRelayer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4774:8:68"
            },
            "parameters": {
              "id": 17133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17130,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 17144,
                  "src": "4729:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17132,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17144,
                  "src": "4743:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4728:31:68"
            },
            "returnParameters": {
              "id": 17137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17144,
                  "src": "4792:4:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4791:6:68"
            },
            "scope": 17221,
            "src": "4701:155:68",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17173,
              "nodeType": "Block",
              "src": "5268:533:68",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 17153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 17150,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5282:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 17151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5282:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 17152,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17147,
                      "src": "5296:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5282:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17172,
                  "nodeType": "IfStatement",
                  "src": "5278:517:68",
                  "trueBody": {
                    "id": 17171,
                    "nodeType": "Block",
                    "src": "5302:493:68",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 17154,
                            "name": "_authenticateCaller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2617,
                            "src": "5420:19:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 17155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5420:21:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17156,
                        "nodeType": "ExpressionStatement",
                        "src": "5420:21:68"
                      },
                      {
                        "condition": {
                          "id": 17162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5654:38:68",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 17158,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17147,
                                "src": "5675:4:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 17159,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5681:3:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 17160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5681:10:68",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 17157,
                              "name": "_hasApprovedRelayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17191,
                              "src": "5655:19:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 17161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5655:37:68",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 17170,
                        "nodeType": "IfStatement",
                        "src": "5650:135:68",
                        "trueBody": {
                          "id": 17169,
                          "nodeType": "Block",
                          "src": "5694:91:68",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 17164,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17147,
                                    "src": "5731:4:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 17165,
                                      "name": "Errors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2971,
                                      "src": "5737:6:68",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Errors_$2971_$",
                                        "typeString": "type(library Errors)"
                                      }
                                    },
                                    "id": 17166,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "USER_DOESNT_ALLOW_RELAYER",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2886,
                                    "src": "5737:32:68",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 17163,
                                  "name": "_validateSignature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3207,
                                  "src": "5712:18:68",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 17167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5712:58:68",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 17168,
                              "nodeType": "ExpressionStatement",
                              "src": "5712:58:68"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 17145,
              "nodeType": "StructuredDocumentation",
              "src": "4862:352:68",
              "text": " @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call the entry point\n function (that is, it is a relayer for that function) and either:\n  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n  b) a valid signature from them was appended to the calldata."
            },
            "id": 17174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_authenticateFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17147,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 17174,
                  "src": "5245:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5244:14:68"
            },
            "returnParameters": {
              "id": 17149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5268:0:68"
            },
            "scope": 17221,
            "src": "5219:582:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17190,
              "nodeType": "Block",
              "src": "5996:56:68",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 17184,
                        "name": "_approvedRelayers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17022,
                        "src": "6013:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 17186,
                      "indexExpression": {
                        "id": 17185,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17177,
                        "src": "6031:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6013:23:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 17188,
                    "indexExpression": {
                      "id": 17187,
                      "name": "relayer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17179,
                      "src": "6037:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6013:32:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17183,
                  "id": 17189,
                  "nodeType": "Return",
                  "src": "6006:39:68"
                }
              ]
            },
            "documentation": {
              "id": 17175,
              "nodeType": "StructuredDocumentation",
              "src": "5807:95:68",
              "text": " @dev Returns true if `user` approved `relayer` to act as a relayer for them."
            },
            "id": 17191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasApprovedRelayer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17177,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 17191,
                  "src": "5936:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17179,
                  "mutability": "mutable",
                  "name": "relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 17191,
                  "src": "5950:15:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5935:31:68"
            },
            "returnParameters": {
              "id": 17183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17182,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17191,
                  "src": "5990:4:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17181,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5990:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5989:6:68"
            },
            "scope": 17221,
            "src": "5907:145:68",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2643
            ],
            "body": {
              "id": 17211,
              "nodeType": "Block",
              "src": "6149:135:68",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17203,
                        "name": "actionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17193,
                        "src": "6247:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 17204,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17195,
                        "src": "6257:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 17207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6271:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                              "typeString": "contract VaultAuthorization"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                              "typeString": "contract VaultAuthorization"
                            }
                          ],
                          "id": 17206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6263:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6263:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6263:13:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 17201,
                        "name": "_authorizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17016,
                        "src": "6224:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                          "typeString": "contract IAuthorizer"
                        }
                      },
                      "id": 17202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "canPerform",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19462,
                      "src": "6224:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address,address) view external returns (bool)"
                      }
                    },
                    "id": 17209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6224:53:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17200,
                  "id": 17210,
                  "nodeType": "Return",
                  "src": "6217:60:68"
                }
              ]
            },
            "id": 17212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canPerform",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6125:8:68"
            },
            "parameters": {
              "id": 17196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17193,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 17212,
                  "src": "6079:16:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17192,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6079:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17195,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 17212,
                  "src": "6097:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6097:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6078:32:68"
            },
            "returnParameters": {
              "id": 17200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17199,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17212,
                  "src": "6143:4:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6143:4:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6142:6:68"
            },
            "scope": 17221,
            "src": "6058:226:68",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3303
            ],
            "body": {
              "id": 17219,
              "nodeType": "Block",
              "src": "6357:1425:68",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "6621:1155:68",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6890:41:68",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6910:3:68",
                              "type": "",
                              "value": "224"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6928:1:68",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "6915:12:68"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6915:15:68"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "6906:3:68"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6906:25:68"
                        },
                        "variables": [
                          {
                            "name": "selector",
                            "nodeType": "YulTypedName",
                            "src": "6894:8:68",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7167:63:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7189:23:68",
                                  "value": {
                                    "name": "_JOIN_TYPE_HASH",
                                    "nodeType": "YulIdentifier",
                                    "src": "7197:15:68"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7189:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7151:79:68",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7156:10:68",
                              "type": "",
                              "value": "0xb95cac28"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7263:63:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7285:23:68",
                                  "value": {
                                    "name": "_EXIT_TYPE_HASH",
                                    "nodeType": "YulIdentifier",
                                    "src": "7293:15:68"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7285:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7247:79:68",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7252:10:68",
                              "type": "",
                              "value": "0x8bdb3913"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7359:63:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7381:23:68",
                                  "value": {
                                    "name": "_SWAP_TYPE_HASH",
                                    "nodeType": "YulIdentifier",
                                    "src": "7389:15:68"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7381:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7343:79:68",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7348:10:68",
                              "type": "",
                              "value": "0x52bbbe29"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7455:69:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7477:29:68",
                                  "value": {
                                    "name": "_BATCH_SWAP_TYPE_HASH",
                                    "nodeType": "YulIdentifier",
                                    "src": "7485:21:68"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7477:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7439:85:68",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7444:10:68",
                              "type": "",
                              "value": "0x945bcec9"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7557:70:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7579:30:68",
                                  "value": {
                                    "name": "_SET_RELAYER_TYPE_HASH",
                                    "nodeType": "YulIdentifier",
                                    "src": "7587:22:68"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7579:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7541:86:68",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7546:10:68",
                              "type": "",
                              "value": "0xfa6e671d"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "7652:114:68",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "7674:74:68",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7682:66:68",
                                    "type": "",
                                    "value": "0x0000000000000000000000000000000000000000000000000000000000000000"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "hash",
                                      "nodeType": "YulIdentifier",
                                      "src": "7674:4:68"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "7644:122:68",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "selector",
                          "nodeType": "YulIdentifier",
                          "src": "7126:8:68"
                        },
                        "nodeType": "YulSwitch",
                        "src": "7119:647:68"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 17011,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7485:21:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17005,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7293:15:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17002,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7197:15:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17014,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7587:22:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17008,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7389:15:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7189:4:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7285:4:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7381:4:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7477:4:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7579:4:68",
                      "valueSize": 1
                    },
                    {
                      "declaration": 17216,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7674:4:68",
                      "valueSize": 1
                    }
                  ],
                  "id": 17218,
                  "nodeType": "InlineAssembly",
                  "src": "6612:1164:68"
                }
              ]
            },
            "id": 17220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_typeHash",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6325:8:68"
            },
            "parameters": {
              "id": 17213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6308:2:68"
            },
            "returnParameters": {
              "id": 17217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17216,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 17220,
                  "src": "6343:12:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 17215,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6343:7:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6342:14:68"
            },
            "scope": 17221,
            "src": "6290:1492:68",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 17222,
        "src": "1500:6284:68"
      }
    ],
    "src": "688:7097:68"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/VaultAuthorization.sol",
      "exportedSymbols": {
        "VaultAuthorization": [
          17221
        ]
      },
      "license": "GPL-3.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 16979,
        "name": "PragmaDirective",
        "src": "688:23:68"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 16980,
        "name": "PragmaDirective",
        "src": "712:33:68"
      },
      {
        "attributes": {
          "SourceUnit": 2972,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16981,
        "name": "ImportDirective",
        "src": "747:79:68"
      },
      {
        "attributes": {
          "SourceUnit": 2645,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/Authentication.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16982,
        "name": "ImportDirective",
        "src": "827:79:68"
      },
      {
        "attributes": {
          "SourceUnit": 3563,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/TemporarilyPausable.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16983,
        "name": "ImportDirective",
        "src": "907:84:68"
      },
      {
        "attributes": {
          "SourceUnit": 2972,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/BalancerErrors.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16984,
        "name": "ImportDirective",
        "src": "992:79:68"
      },
      {
        "attributes": {
          "SourceUnit": 3383,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/helpers/SignaturesValidator.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16985,
        "name": "ImportDirective",
        "src": "1072:84:68"
      },
      {
        "attributes": {
          "SourceUnit": 7212,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/ReentrancyGuard.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16986,
        "name": "ImportDirective",
        "src": "1157:85:68"
      },
      {
        "attributes": {
          "SourceUnit": 20135,
          "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IVault.sol",
          "file": "./interfaces/IVault.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16987,
        "name": "ImportDirective",
        "src": "1244:33:68"
      },
      {
        "attributes": {
          "SourceUnit": 19464,
          "absolutePath": "project:/node_modules/@balancer-labs/v2-vault/contracts/interfaces/IAuthorizer.sol",
          "file": "./interfaces/IAuthorizer.sol",
          "scope": 17222,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 16988,
        "name": "ImportDirective",
        "src": "1278:38:68"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            2644,
            2982,
            3000,
            3019,
            3382,
            3562,
            5914,
            7211,
            20134
          ],
          "contractKind": "contract",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            17221,
            3562,
            3382,
            5914,
            2644,
            2982,
            7211,
            20134,
            3019,
            3000
          ],
          "name": "VaultAuthorization",
          "scope": 17222
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Manages access control of Vault permissioned functions by relying on the Authorizer and signature validation.\n Additionally handles relayer access and approval."
            },
            "id": 16989,
            "name": "StructuredDocumentation",
            "src": "1318:181:68"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IVault",
                  "referencedDeclaration": 20134,
                  "type": "contract IVault"
                },
                "id": 16990,
                "name": "UserDefinedTypeName",
                "src": "1544:6:68"
              }
            ],
            "id": 16991,
            "name": "InheritanceSpecifier",
            "src": "1544:6:68"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ReentrancyGuard",
                  "referencedDeclaration": 7211,
                  "type": "contract ReentrancyGuard"
                },
                "id": 16992,
                "name": "UserDefinedTypeName",
                "src": "1556:15:68"
              }
            ],
            "id": 16993,
            "name": "InheritanceSpecifier",
            "src": "1556:15:68"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Authentication",
                  "referencedDeclaration": 2644,
                  "type": "contract Authentication"
                },
                "id": 16994,
                "name": "UserDefinedTypeName",
                "src": "1577:14:68"
              }
            ],
            "id": 16995,
            "name": "InheritanceSpecifier",
            "src": "1577:14:68"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "SignaturesValidator",
                  "referencedDeclaration": 3382,
                  "type": "contract SignaturesValidator"
                },
                "id": 16996,
                "name": "UserDefinedTypeName",
                "src": "1597:19:68"
              }
            ],
            "id": 16997,
            "name": "InheritanceSpecifier",
            "src": "1597:19:68"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "TemporarilyPausable",
                  "referencedDeclaration": 3562,
                  "type": "contract TemporarilyPausable"
                },
                "id": 16998,
                "name": "UserDefinedTypeName",
                "src": "1622:19:68"
              }
            ],
            "id": 16999,
            "name": "InheritanceSpecifier",
            "src": "1622:19:68"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_JOIN_TYPE_HASH",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 17000,
                "name": "ElementaryTypeName",
                "src": "1992:7:68"
              },
              {
                "attributes": {
                  "hexvalue": "307833663762373132353262643139313133666634386331396336653030346139626366636361333230613064373464353865383538373763626437646361653538",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 2871...(69 digits omitted)...5432",
                  "value": "0x3f7b71252bd19113ff48c19c6e004a9bcfcca320a0d74d58e85877cbd7dcae58"
                },
                "id": 17001,
                "name": "Literal",
                "src": "2035:66:68"
              }
            ],
            "id": 17002,
            "name": "VariableDeclaration",
            "src": "1992:109:68"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_EXIT_TYPE_HASH",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 17003,
                "name": "ElementaryTypeName",
                "src": "2218:7:68"
              },
              {
                "attributes": {
                  "hexvalue": "307838626263353766363665613933363930326635306137316365313262393263343366336335333430626234306332376334653930616238346565616533333533",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 6320...(69 digits omitted)...4419",
                  "value": "0x8bbc57f66ea936902f50a71ce12b92c43f3c5340bb40c27c4e90ab84eeae3353"
                },
                "id": 17004,
                "name": "Literal",
                "src": "2261:66:68"
              }
            ],
            "id": 17005,
            "name": "VariableDeclaration",
            "src": "2218:109:68"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_SWAP_TYPE_HASH",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 17006,
                "name": "ElementaryTypeName",
                "src": "2440:7:68"
              },
              {
                "attributes": {
                  "hexvalue": "307865313932646362633134336231653234346164373362383133666433633039376238333261643236306131353733343062346535653562656461303637616265",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1020...(70 digits omitted)...0622",
                  "value": "0xe192dcbc143b1e244ad73b813fd3c097b832ad260a157340b4e5e5beda067abe"
                },
                "id": 17007,
                "name": "Literal",
                "src": "2483:66:68"
              }
            ],
            "id": 17008,
            "name": "VariableDeclaration",
            "src": "2440:109:68"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_BATCH_SWAP_TYPE_HASH",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 17009,
                "name": "ElementaryTypeName",
                "src": "2673:7:68"
              },
              {
                "attributes": {
                  "hexvalue": "307839626663343361346439383331336336373636393836666664376339313663373438313536366439663232346336383139616630613533333838616365643361",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 7055...(69 digits omitted)...0442",
                  "value": "0x9bfc43a4d98313c6766986ffd7c916c7481566d9f224c6819af0a53388aced3a"
                },
                "id": 17010,
                "name": "Literal",
                "src": "2722:66:68"
              }
            ],
            "id": 17011,
            "name": "VariableDeclaration",
            "src": "2673:115:68"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_SET_RELAYER_TYPE_HASH",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 17012,
                "name": "ElementaryTypeName",
                "src": "2933:7:68"
              },
              {
                "attributes": {
                  "hexvalue": "307861336638363561613335316535316366656234306635313738643135363462623632396665393033306238336361663633363164316261616635623930623561",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 7416...(69 digits omitted)...9258",
                  "value": "0xa3f865aa351e51cfeb40f5178d1564bb629fe9030b83caf6361d1baaf5b90b5a"
                },
                "id": 17013,
                "name": "Literal",
                "src": "2991:66:68"
              }
            ],
            "id": 17014,
            "name": "VariableDeclaration",
            "src": "2933:124:68"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_authorizer",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract IAuthorizer",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "IAuthorizer",
                  "referencedDeclaration": 19463,
                  "type": "contract IAuthorizer"
                },
                "id": 17015,
                "name": "UserDefinedTypeName",
                "src": "3064:11:68"
              }
            ],
            "id": 17016,
            "name": "VariableDeclaration",
            "src": "3064:31:68"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_approvedRelayers",
              "scope": 17221,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(address => bool))",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(address => bool))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 17017,
                    "name": "ElementaryTypeName",
                    "src": "3109:7:68"
                  },
                  {
                    "attributes": {
                      "type": "mapping(address => bool)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 17018,
                        "name": "ElementaryTypeName",
                        "src": "3128:7:68"
                      },
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 17019,
                        "name": "ElementaryTypeName",
                        "src": "3139:4:68"
                      }
                    ],
                    "id": 17020,
                    "name": "Mapping",
                    "src": "3120:24:68"
                  }
                ],
                "id": 17021,
                "name": "Mapping",
                "src": "3101:44:68"
              }
            ],
            "id": 17022,
            "name": "VariableDeclaration",
            "src": "3101:70:68"
          },
          {
            "attributes": {
              "name": "authenticateFor",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call this function (that\n is, it is a relayer for that function), and either:\n  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n  b) a valid signature from them was appended to the calldata.\n Should only be applied to external functions."
                },
                "id": 17023,
                "name": "StructuredDocumentation",
                "src": "3178:402:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 17033,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17024,
                        "name": "ElementaryTypeName",
                        "src": "3610:7:68"
                      }
                    ],
                    "id": 17025,
                    "name": "VariableDeclaration",
                    "src": "3610:12:68"
                  }
                ],
                "id": 17026,
                "name": "ParameterList",
                "src": "3609:14:68"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17174,
                              "type": "function (address)",
                              "value": "_authenticateFor"
                            },
                            "id": 17027,
                            "name": "Identifier",
                            "src": "3634:16:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17025,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 17028,
                            "name": "Identifier",
                            "src": "3651:4:68"
                          }
                        ],
                        "id": 17029,
                        "name": "FunctionCall",
                        "src": "3634:22:68"
                      }
                    ],
                    "id": 17030,
                    "name": "ExpressionStatement",
                    "src": "3634:22:68"
                  },
                  {
                    "id": 17031,
                    "name": "PlaceholderStatement",
                    "src": "3666:1:68"
                  }
                ],
                "id": 17032,
                "name": "Block",
                "src": "3624:50:68"
              }
            ],
            "id": 17033,
            "name": "ModifierDefinition",
            "src": "3585:89:68"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 17221,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "authorizer",
                      "scope": 17058,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IAuthorizer",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IAuthorizer",
                          "referencedDeclaration": 19463,
                          "type": "contract IAuthorizer"
                        },
                        "id": 17034,
                        "name": "UserDefinedTypeName",
                        "src": "3692:11:68"
                      }
                    ],
                    "id": 17035,
                    "name": "VariableDeclaration",
                    "src": "3692:22:68"
                  }
                ],
                "id": 17036,
                "name": "ParameterList",
                "src": "3691:24:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17052,
                "name": "ParameterList",
                "src": "3932:0:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2644,
                      "type": "type(contract Authentication)",
                      "value": "Authentication"
                    },
                    "id": 17037,
                    "name": "Identifier",
                    "src": "3831:14:68"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "isStructConstructorCall": false,
                      "lValueRequested": false,
                      "names": [
                        null
                      ],
                      "tryCall": false,
                      "type": "bytes32",
                      "type_conversion": true
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "type(bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32"
                            },
                            "id": 17038,
                            "name": "ElementaryTypeName",
                            "src": "3846:7:68"
                          }
                        ],
                        "id": 17039,
                        "name": "ElementaryTypeNameExpression",
                        "src": "3846:7:68"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256"
                                },
                                "id": 17040,
                                "name": "ElementaryTypeName",
                                "src": "3854:7:68"
                              }
                            ],
                            "id": 17041,
                            "name": "ElementaryTypeNameExpression",
                            "src": "3854:7:68"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                                      "typeString": "contract VaultAuthorization"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 17042,
                                    "name": "ElementaryTypeName",
                                    "src": "3862:7:68"
                                  }
                                ],
                                "id": 17043,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3862:7:68"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract VaultAuthorization",
                                  "value": "this"
                                },
                                "id": 17044,
                                "name": "Identifier",
                                "src": "3870:4:68"
                              }
                            ],
                            "id": 17045,
                            "name": "FunctionCall",
                            "src": "3862:13:68"
                          }
                        ],
                        "id": 17046,
                        "name": "FunctionCall",
                        "src": "3854:22:68"
                      }
                    ],
                    "id": 17047,
                    "name": "FunctionCall",
                    "src": "3846:31:68"
                  }
                ],
                "id": 17048,
                "name": "ModifierInvocation",
                "src": "3831:47:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3382,
                      "type": "type(contract SignaturesValidator)",
                      "value": "SignaturesValidator"
                    },
                    "id": 17049,
                    "name": "Identifier",
                    "src": "3887:19:68"
                  },
                  {
                    "attributes": {
                      "hexvalue": "42616c616e636572205632205661756c74",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Balancer V2 Vault\"",
                      "value": "Balancer V2 Vault"
                    },
                    "id": 17050,
                    "name": "Literal",
                    "src": "3907:19:68"
                  }
                ],
                "id": 17051,
                "name": "ModifierInvocation",
                "src": "3887:40:68"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                                  "typeString": "contract IAuthorizer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17087,
                              "type": "function (contract IAuthorizer)",
                              "value": "_setAuthorizer"
                            },
                            "id": 17053,
                            "name": "Identifier",
                            "src": "3942:14:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17035,
                              "type": "contract IAuthorizer",
                              "value": "authorizer"
                            },
                            "id": 17054,
                            "name": "Identifier",
                            "src": "3957:10:68"
                          }
                        ],
                        "id": 17055,
                        "name": "FunctionCall",
                        "src": "3942:26:68"
                      }
                    ],
                    "id": 17056,
                    "name": "ExpressionStatement",
                    "src": "3942:26:68"
                  }
                ],
                "id": 17057,
                "name": "Block",
                "src": "3932:43:68"
              }
            ],
            "id": 17058,
            "name": "FunctionDefinition",
            "src": "3680:295:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                19700
              ],
              "functionSelector": "058a628f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setAuthorizer",
              "scope": 17221,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17062,
                "name": "OverrideSpecifier",
                "src": "4040:8:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newAuthorizer",
                      "scope": 17073,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IAuthorizer",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IAuthorizer",
                          "referencedDeclaration": 19463,
                          "type": "contract IAuthorizer"
                        },
                        "id": 17059,
                        "name": "UserDefinedTypeName",
                        "src": "4004:11:68"
                      }
                    ],
                    "id": 17060,
                    "name": "VariableDeclaration",
                    "src": "4004:25:68"
                  }
                ],
                "id": 17061,
                "name": "ParameterList",
                "src": "4003:27:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17067,
                "name": "ParameterList",
                "src": "4075:0:68"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7186,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 17063,
                    "name": "Identifier",
                    "src": "4049:12:68"
                  }
                ],
                "id": 17064,
                "name": "ModifierInvocation",
                "src": "4049:12:68"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2595,
                      "type": "modifier ()",
                      "value": "authenticate"
                    },
                    "id": 17065,
                    "name": "Identifier",
                    "src": "4062:12:68"
                  }
                ],
                "id": 17066,
                "name": "ModifierInvocation",
                "src": "4062:12:68"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                                  "typeString": "contract IAuthorizer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17087,
                              "type": "function (contract IAuthorizer)",
                              "value": "_setAuthorizer"
                            },
                            "id": 17068,
                            "name": "Identifier",
                            "src": "4085:14:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17060,
                              "type": "contract IAuthorizer",
                              "value": "newAuthorizer"
                            },
                            "id": 17069,
                            "name": "Identifier",
                            "src": "4100:13:68"
                          }
                        ],
                        "id": 17070,
                        "name": "FunctionCall",
                        "src": "4085:29:68"
                      }
                    ],
                    "id": 17071,
                    "name": "ExpressionStatement",
                    "src": "4085:29:68"
                  }
                ],
                "id": 17072,
                "name": "Block",
                "src": "4075:46:68"
              }
            ],
            "id": 17073,
            "name": "FunctionDefinition",
            "src": "3981:140:68"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_setAuthorizer",
              "scope": 17221,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newAuthorizer",
                      "scope": 17087,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IAuthorizer",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IAuthorizer",
                          "referencedDeclaration": 19463,
                          "type": "contract IAuthorizer"
                        },
                        "id": 17074,
                        "name": "UserDefinedTypeName",
                        "src": "4151:11:68"
                      }
                    ],
                    "id": 17075,
                    "name": "VariableDeclaration",
                    "src": "4151:25:68"
                  }
                ],
                "id": 17076,
                "name": "ParameterList",
                "src": "4150:27:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17077,
                "name": "ParameterList",
                "src": "4186:0:68"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAuthorizer_$19463",
                                  "typeString": "contract IAuthorizer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 19705,
                              "type": "function (contract IAuthorizer)",
                              "value": "AuthorizerChanged"
                            },
                            "id": 17078,
                            "name": "Identifier",
                            "src": "4201:17:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17075,
                              "type": "contract IAuthorizer",
                              "value": "newAuthorizer"
                            },
                            "id": 17079,
                            "name": "Identifier",
                            "src": "4219:13:68"
                          }
                        ],
                        "id": 17080,
                        "name": "FunctionCall",
                        "src": "4201:32:68"
                      }
                    ],
                    "id": 17081,
                    "name": "EmitStatement",
                    "src": "4196:37:68"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract IAuthorizer"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17016,
                              "type": "contract IAuthorizer",
                              "value": "_authorizer"
                            },
                            "id": 17082,
                            "name": "Identifier",
                            "src": "4243:11:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17075,
                              "type": "contract IAuthorizer",
                              "value": "newAuthorizer"
                            },
                            "id": 17083,
                            "name": "Identifier",
                            "src": "4257:13:68"
                          }
                        ],
                        "id": 17084,
                        "name": "Assignment",
                        "src": "4243:27:68"
                      }
                    ],
                    "id": 17085,
                    "name": "ExpressionStatement",
                    "src": "4243:27:68"
                  }
                ],
                "id": 17086,
                "name": "Block",
                "src": "4186:91:68"
              }
            ],
            "id": 17087,
            "name": "FunctionDefinition",
            "src": "4127:150:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                19694
              ],
              "functionSelector": "aaabadc5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getAuthorizer",
              "scope": 17221,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17089,
                "name": "OverrideSpecifier",
                "src": "4322:8:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17088,
                "name": "ParameterList",
                "src": "4305:2:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 17096,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IAuthorizer",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IAuthorizer",
                          "referencedDeclaration": 19463,
                          "type": "contract IAuthorizer"
                        },
                        "id": 17090,
                        "name": "UserDefinedTypeName",
                        "src": "4340:11:68"
                      }
                    ],
                    "id": 17091,
                    "name": "VariableDeclaration",
                    "src": "4340:11:68"
                  }
                ],
                "id": 17092,
                "name": "ParameterList",
                "src": "4339:13:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 17092
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 17016,
                          "type": "contract IAuthorizer",
                          "value": "_authorizer"
                        },
                        "id": 17093,
                        "name": "Identifier",
                        "src": "4370:11:68"
                      }
                    ],
                    "id": 17094,
                    "name": "Return",
                    "src": "4363:18:68"
                  }
                ],
                "id": 17095,
                "name": "Block",
                "src": "4353:35:68"
              }
            ],
            "id": 17096,
            "name": "FunctionDefinition",
            "src": "4283:105:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                19725
              ],
              "functionSelector": "fa6e671d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setRelayerApproval",
              "scope": 17221,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17104,
                "name": "OverrideSpecifier",
                "src": "4509:8:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "sender",
                      "scope": 17128,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17097,
                        "name": "ElementaryTypeName",
                        "src": "4431:7:68"
                      }
                    ],
                    "id": 17098,
                    "name": "VariableDeclaration",
                    "src": "4431:14:68"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "relayer",
                      "scope": 17128,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17099,
                        "name": "ElementaryTypeName",
                        "src": "4455:7:68"
                      }
                    ],
                    "id": 17100,
                    "name": "VariableDeclaration",
                    "src": "4455:15:68"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "approved",
                      "scope": 17128,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 17101,
                        "name": "ElementaryTypeName",
                        "src": "4480:4:68"
                      }
                    ],
                    "id": 17102,
                    "name": "VariableDeclaration",
                    "src": "4480:13:68"
                  }
                ],
                "id": 17103,
                "name": "ParameterList",
                "src": "4421:78:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17112,
                "name": "ParameterList",
                "src": "4569:0:68"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7186,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 17105,
                    "name": "Identifier",
                    "src": "4518:12:68"
                  }
                ],
                "id": 17106,
                "name": "ModifierInvocation",
                "src": "4518:12:68"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3450,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 17107,
                    "name": "Identifier",
                    "src": "4531:13:68"
                  }
                ],
                "id": 17108,
                "name": "ModifierInvocation",
                "src": "4531:13:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 17033,
                      "type": "modifier (address)",
                      "value": "authenticateFor"
                    },
                    "id": 17109,
                    "name": "Identifier",
                    "src": "4545:15:68"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 17098,
                      "type": "address",
                      "value": "sender"
                    },
                    "id": 17110,
                    "name": "Identifier",
                    "src": "4561:6:68"
                  }
                ],
                "id": 17111,
                "name": "ModifierInvocation",
                "src": "4545:23:68"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 17022,
                                      "type": "mapping(address => mapping(address => bool))",
                                      "value": "_approvedRelayers"
                                    },
                                    "id": 17113,
                                    "name": "Identifier",
                                    "src": "4579:17:68"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 17098,
                                      "type": "address",
                                      "value": "sender"
                                    },
                                    "id": 17114,
                                    "name": "Identifier",
                                    "src": "4597:6:68"
                                  }
                                ],
                                "id": 17116,
                                "name": "IndexAccess",
                                "src": "4579:25:68"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17100,
                                  "type": "address",
                                  "value": "relayer"
                                },
                                "id": 17115,
                                "name": "Identifier",
                                "src": "4605:7:68"
                              }
                            ],
                            "id": 17117,
                            "name": "IndexAccess",
                            "src": "4579:34:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17102,
                              "type": "bool",
                              "value": "approved"
                            },
                            "id": 17118,
                            "name": "Identifier",
                            "src": "4616:8:68"
                          }
                        ],
                        "id": 17119,
                        "name": "Assignment",
                        "src": "4579:45:68"
                      }
                    ],
                    "id": 17120,
                    "name": "ExpressionStatement",
                    "src": "4579:45:68"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 19734,
                              "type": "function (address,address,bool)",
                              "value": "RelayerApprovalChanged"
                            },
                            "id": 17121,
                            "name": "Identifier",
                            "src": "4639:22:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17100,
                              "type": "address",
                              "value": "relayer"
                            },
                            "id": 17122,
                            "name": "Identifier",
                            "src": "4662:7:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17098,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 17123,
                            "name": "Identifier",
                            "src": "4671:6:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17102,
                              "type": "bool",
                              "value": "approved"
                            },
                            "id": 17124,
                            "name": "Identifier",
                            "src": "4679:8:68"
                          }
                        ],
                        "id": 17125,
                        "name": "FunctionCall",
                        "src": "4639:49:68"
                      }
                    ],
                    "id": 17126,
                    "name": "EmitStatement",
                    "src": "4634:54:68"
                  }
                ],
                "id": 17127,
                "name": "Block",
                "src": "4569:126:68"
              }
            ],
            "id": 17128,
            "name": "FunctionDefinition",
            "src": "4394:301:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                19715
              ],
              "functionSelector": "fec90d72",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "hasApprovedRelayer",
              "scope": 17221,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17134,
                "name": "OverrideSpecifier",
                "src": "4774:8:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 17144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17129,
                        "name": "ElementaryTypeName",
                        "src": "4729:7:68"
                      }
                    ],
                    "id": 17130,
                    "name": "VariableDeclaration",
                    "src": "4729:12:68"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "relayer",
                      "scope": 17144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17131,
                        "name": "ElementaryTypeName",
                        "src": "4743:7:68"
                      }
                    ],
                    "id": 17132,
                    "name": "VariableDeclaration",
                    "src": "4743:15:68"
                  }
                ],
                "id": 17133,
                "name": "ParameterList",
                "src": "4728:31:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 17144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 17135,
                        "name": "ElementaryTypeName",
                        "src": "4792:4:68"
                      }
                    ],
                    "id": 17136,
                    "name": "VariableDeclaration",
                    "src": "4792:4:68"
                  }
                ],
                "id": 17137,
                "name": "ParameterList",
                "src": "4791:6:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 17137
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17191,
                              "type": "function (address,address) view returns (bool)",
                              "value": "_hasApprovedRelayer"
                            },
                            "id": 17138,
                            "name": "Identifier",
                            "src": "4815:19:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17130,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 17139,
                            "name": "Identifier",
                            "src": "4835:4:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17132,
                              "type": "address",
                              "value": "relayer"
                            },
                            "id": 17140,
                            "name": "Identifier",
                            "src": "4841:7:68"
                          }
                        ],
                        "id": 17141,
                        "name": "FunctionCall",
                        "src": "4815:34:68"
                      }
                    ],
                    "id": 17142,
                    "name": "Return",
                    "src": "4808:41:68"
                  }
                ],
                "id": 17143,
                "name": "Block",
                "src": "4798:58:68"
              }
            ],
            "id": 17144,
            "name": "FunctionDefinition",
            "src": "4701:155:68"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_authenticateFor",
              "scope": 17221,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Reverts unless `user` is the caller, or the caller is approved by the Authorizer to call the entry point\n function (that is, it is a relayer for that function) and either:\n  a) `user` approved the caller as a relayer (via `setRelayerApproval`), or\n  b) a valid signature from them was appended to the calldata."
                },
                "id": 17145,
                "name": "StructuredDocumentation",
                "src": "4862:352:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 17174,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17146,
                        "name": "ElementaryTypeName",
                        "src": "5245:7:68"
                      }
                    ],
                    "id": 17147,
                    "name": "VariableDeclaration",
                    "src": "5245:12:68"
                  }
                ],
                "id": 17148,
                "name": "ParameterList",
                "src": "5244:14:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17149,
                "name": "ParameterList",
                "src": "5268:0:68"
              },
              {
                "children": [
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 17150,
                                "name": "Identifier",
                                "src": "5282:3:68"
                              }
                            ],
                            "id": 17151,
                            "name": "MemberAccess",
                            "src": "5282:10:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17147,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 17152,
                            "name": "Identifier",
                            "src": "5296:4:68"
                          }
                        ],
                        "id": 17153,
                        "name": "BinaryOperation",
                        "src": "5282:18:68"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2617,
                                      "type": "function () view",
                                      "value": "_authenticateCaller"
                                    },
                                    "id": 17154,
                                    "name": "Identifier",
                                    "src": "5420:19:68"
                                  }
                                ],
                                "id": 17155,
                                "name": "FunctionCall",
                                "src": "5420:21:68"
                              }
                            ],
                            "id": 17156,
                            "name": "ExpressionStatement",
                            "src": "5420:21:68"
                          },
                          {
                            "attributes": {},
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17191,
                                          "type": "function (address,address) view returns (bool)",
                                          "value": "_hasApprovedRelayer"
                                        },
                                        "id": 17157,
                                        "name": "Identifier",
                                        "src": "5655:19:68"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 17147,
                                          "type": "address",
                                          "value": "user"
                                        },
                                        "id": 17158,
                                        "name": "Identifier",
                                        "src": "5675:4:68"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -15,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 17159,
                                            "name": "Identifier",
                                            "src": "5681:3:68"
                                          }
                                        ],
                                        "id": 17160,
                                        "name": "MemberAccess",
                                        "src": "5681:10:68"
                                      }
                                    ],
                                    "id": 17161,
                                    "name": "FunctionCall",
                                    "src": "5655:37:68"
                                  }
                                ],
                                "id": 17162,
                                "name": "UnaryOperation",
                                "src": "5654:38:68"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 3207,
                                              "type": "function (address,uint256)",
                                              "value": "_validateSignature"
                                            },
                                            "id": 17163,
                                            "name": "Identifier",
                                            "src": "5712:18:68"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 17147,
                                              "type": "address",
                                              "value": "user"
                                            },
                                            "id": 17164,
                                            "name": "Identifier",
                                            "src": "5731:4:68"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "USER_DOESNT_ALLOW_RELAYER",
                                              "referencedDeclaration": 2886,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2971,
                                                  "type": "type(library Errors)",
                                                  "value": "Errors"
                                                },
                                                "id": 17165,
                                                "name": "Identifier",
                                                "src": "5737:6:68"
                                              }
                                            ],
                                            "id": 17166,
                                            "name": "MemberAccess",
                                            "src": "5737:32:68"
                                          }
                                        ],
                                        "id": 17167,
                                        "name": "FunctionCall",
                                        "src": "5712:58:68"
                                      }
                                    ],
                                    "id": 17168,
                                    "name": "ExpressionStatement",
                                    "src": "5712:58:68"
                                  }
                                ],
                                "id": 17169,
                                "name": "Block",
                                "src": "5694:91:68"
                              }
                            ],
                            "id": 17170,
                            "name": "IfStatement",
                            "src": "5650:135:68"
                          }
                        ],
                        "id": 17171,
                        "name": "Block",
                        "src": "5302:493:68"
                      }
                    ],
                    "id": 17172,
                    "name": "IfStatement",
                    "src": "5278:517:68"
                  }
                ],
                "id": 17173,
                "name": "Block",
                "src": "5268:533:68"
              }
            ],
            "id": 17174,
            "name": "FunctionDefinition",
            "src": "5219:582:68"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_hasApprovedRelayer",
              "scope": 17221,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns true if `user` approved `relayer` to act as a relayer for them."
                },
                "id": 17175,
                "name": "StructuredDocumentation",
                "src": "5807:95:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 17191,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17176,
                        "name": "ElementaryTypeName",
                        "src": "5936:7:68"
                      }
                    ],
                    "id": 17177,
                    "name": "VariableDeclaration",
                    "src": "5936:12:68"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "relayer",
                      "scope": 17191,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17178,
                        "name": "ElementaryTypeName",
                        "src": "5950:7:68"
                      }
                    ],
                    "id": 17179,
                    "name": "VariableDeclaration",
                    "src": "5950:15:68"
                  }
                ],
                "id": 17180,
                "name": "ParameterList",
                "src": "5935:31:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 17191,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 17181,
                        "name": "ElementaryTypeName",
                        "src": "5990:4:68"
                      }
                    ],
                    "id": 17182,
                    "name": "VariableDeclaration",
                    "src": "5990:4:68"
                  }
                ],
                "id": 17183,
                "name": "ParameterList",
                "src": "5989:6:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 17183
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(address => bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17022,
                                  "type": "mapping(address => mapping(address => bool))",
                                  "value": "_approvedRelayers"
                                },
                                "id": 17184,
                                "name": "Identifier",
                                "src": "6013:17:68"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17177,
                                  "type": "address",
                                  "value": "user"
                                },
                                "id": 17185,
                                "name": "Identifier",
                                "src": "6031:4:68"
                              }
                            ],
                            "id": 17186,
                            "name": "IndexAccess",
                            "src": "6013:23:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17179,
                              "type": "address",
                              "value": "relayer"
                            },
                            "id": 17187,
                            "name": "Identifier",
                            "src": "6037:7:68"
                          }
                        ],
                        "id": 17188,
                        "name": "IndexAccess",
                        "src": "6013:32:68"
                      }
                    ],
                    "id": 17189,
                    "name": "Return",
                    "src": "6006:39:68"
                  }
                ],
                "id": 17190,
                "name": "Block",
                "src": "5996:56:68"
              }
            ],
            "id": 17191,
            "name": "FunctionDefinition",
            "src": "5907:145:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                2643
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_canPerform",
              "scope": 17221,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17197,
                "name": "OverrideSpecifier",
                "src": "6125:8:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "actionId",
                      "scope": 17212,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 17192,
                        "name": "ElementaryTypeName",
                        "src": "6079:7:68"
                      }
                    ],
                    "id": 17193,
                    "name": "VariableDeclaration",
                    "src": "6079:16:68"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "user",
                      "scope": 17212,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 17194,
                        "name": "ElementaryTypeName",
                        "src": "6097:7:68"
                      }
                    ],
                    "id": 17195,
                    "name": "VariableDeclaration",
                    "src": "6097:12:68"
                  }
                ],
                "id": 17196,
                "name": "ParameterList",
                "src": "6078:32:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 17212,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 17198,
                        "name": "ElementaryTypeName",
                        "src": "6143:4:68"
                      }
                    ],
                    "id": 17199,
                    "name": "VariableDeclaration",
                    "src": "6143:4:68"
                  }
                ],
                "id": 17200,
                "name": "ParameterList",
                "src": "6142:6:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 17200
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "canPerform",
                              "referencedDeclaration": 19462,
                              "type": "function (bytes32,address,address) view external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 17016,
                                  "type": "contract IAuthorizer",
                                  "value": "_authorizer"
                                },
                                "id": 17201,
                                "name": "Identifier",
                                "src": "6224:11:68"
                              }
                            ],
                            "id": 17202,
                            "name": "MemberAccess",
                            "src": "6224:22:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17193,
                              "type": "bytes32",
                              "value": "actionId"
                            },
                            "id": 17203,
                            "name": "Identifier",
                            "src": "6247:8:68"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 17195,
                              "type": "address",
                              "value": "user"
                            },
                            "id": 17204,
                            "name": "Identifier",
                            "src": "6257:4:68"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VaultAuthorization_$17221",
                                      "typeString": "contract VaultAuthorization"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 17205,
                                    "name": "ElementaryTypeName",
                                    "src": "6263:7:68"
                                  }
                                ],
                                "id": 17206,
                                "name": "ElementaryTypeNameExpression",
                                "src": "6263:7:68"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract VaultAuthorization",
                                  "value": "this"
                                },
                                "id": 17207,
                                "name": "Identifier",
                                "src": "6271:4:68"
                              }
                            ],
                            "id": 17208,
                            "name": "FunctionCall",
                            "src": "6263:13:68"
                          }
                        ],
                        "id": 17209,
                        "name": "FunctionCall",
                        "src": "6224:53:68"
                      }
                    ],
                    "id": 17210,
                    "name": "Return",
                    "src": "6217:60:68"
                  }
                ],
                "id": 17211,
                "name": "Block",
                "src": "6149:135:68"
              }
            ],
            "id": 17212,
            "name": "FunctionDefinition",
            "src": "6058:226:68"
          },
          {
            "attributes": {
              "baseFunctions": [
                3303
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_typeHash",
              "scope": 17221,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 17214,
                "name": "OverrideSpecifier",
                "src": "6325:8:68"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17213,
                "name": "ParameterList",
                "src": "6308:2:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "hash",
                      "scope": 17220,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 17215,
                        "name": "ElementaryTypeName",
                        "src": "6343:7:68"
                      }
                    ],
                    "id": 17216,
                    "name": "VariableDeclaration",
                    "src": "6343:12:68"
                  }
                ],
                "id": 17217,
                "name": "ParameterList",
                "src": "6342:14:68"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 17011,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7485:21:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17005,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7293:15:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17002,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7197:15:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17014,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7587:22:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17008,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7389:15:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7189:4:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7285:4:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7381:4:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7477:4:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7579:4:68",
                          "valueSize": 1
                        },
                        {
                          "declaration": 17216,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7674:4:68",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{\n    let selector := shr(224, calldataload(0))\n    switch selector\n    case 0xb95cac28 { hash := _JOIN_TYPE_HASH }\n    case 0x8bdb3913 { hash := _EXIT_TYPE_HASH }\n    case 0x52bbbe29 { hash := _SWAP_TYPE_HASH }\n    case 0x945bcec9 { hash := _BATCH_SWAP_TYPE_HASH }\n    case 0xfa6e671d {\n        hash := _SET_RELAYER_TYPE_HASH\n    }\n    default {\n        hash := 0x0000000000000000000000000000000000000000000000000000000000000000\n    }\n}"
                    },
                    "children": [],
                    "id": 17218,
                    "name": "InlineAssembly",
                    "src": "6612:1164:68"
                  }
                ],
                "id": 17219,
                "name": "Block",
                "src": "6357:1425:68"
              }
            ],
            "id": 17220,
            "name": "FunctionDefinition",
            "src": "6290:1492:68"
          }
        ],
        "id": 17221,
        "name": "ContractDefinition",
        "src": "1500:6284:68"
      }
    ],
    "id": 17222,
    "name": "SourceUnit",
    "src": "688:7097:68"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-19T22:46:59.578Z",
  "devdoc": {
    "details": "Manages access control of Vault permissioned functions by relying on the Authorizer and signature validation. Additionally handles relayer access and approval.",
    "kind": "dev",
    "methods": {
      "WETH()": {
        "details": "Returns the Vault's WETH instance."
      },
      "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": {
        "details": "Performs a series of swaps with one or multiple Pools. In each individual swap, the caller determines either the amount of tokens sent to or received from the Pool, depending on the `kind` value. Returns an array with the net Vault asset balance deltas. Positive amounts represent tokens (or ETH) sent to the Vault, and negative amounts represent tokens (or ETH) sent by the Vault. Each delta corresponds to the asset at the same index in the `assets` array. Swaps are executed sequentially, in the order specified by the `swaps` array. Each array element describes a Pool, the token to be sent to this Pool, the token to receive from it, and an amount that is either `amountIn` or `amountOut` depending on the swap kind. Multihop swaps can be executed by passing an `amount` value of zero for a swap. This will cause the amount in/out of the previous swap to be used as the amount in for the current one. In a 'given in' swap, 'tokenIn' must equal the previous swap's `tokenOut`. For a 'given out' swap, `tokenOut` must equal the previous swap's `tokenIn`. The `assets` array contains the addresses of all assets involved in the swaps. These are either token addresses, or the IAsset sentinel value for ETH (the zero address). Each entry in the `swaps` array specifies tokens in and out by referencing an index in `assets`. Note that Pools never interact with ETH directly: it will be wrapped to or unwrapped from WETH by the Vault. Internal Balance usage, sender, and recipient are determined by the `funds` struct. The `limits` array specifies the minimum or maximum amount of each token the vault is allowed to transfer. `batchSwap` can be used to make a single swap, like `swap` does, but doing so requires more gas than the equivalent `swap` call. Emits `Swap` events."
      },
      "deregisterTokens(bytes32,address[])": {
        "details": "Deregisters `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Only registered tokens (via `registerTokens`) can be deregistered. Additionally, they must have zero total balance. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be deregistered in the same `deregisterTokens` call. A deregistered token can be re-registered later on, possibly with a different Asset Manager. Emits a `TokensDeregistered` event."
      },
      "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
        "details": "Called by users to exit a Pool, which transfers tokens from the Pool's balance to `recipient`. This will trigger custom Pool behavior, which will typically ask for something in return from `sender` - often tokenized Pool shares. The amount of tokens that can be withdrawn is limited by the Pool's `cash` balance (see `getPoolTokenInfo`). If the caller is not `sender`, it must be an authorized relayer for them. The `tokens` and `minAmountsOut` arrays must have the same length, and each entry in these indicates the minimum token amount to receive for each token contract. The amounts to send are decided by the Pool and not the Vault: it just enforces these minimums. If exiting a Pool that holds WETH, it is possible to receive ETH directly: the Vault will do the unwrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same exit. `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If receiving ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be exited. If `toInternalBalance` is true, the tokens will be deposited to `recipient`'s Internal Balance. Otherwise, an ERC20 transfer will be performed. Note that ETH cannot be deposited to Internal Balance: attempting to do so will trigger a revert. `minAmountsOut` is the minimum amount of tokens the user expects to get out of the Pool, for each token in the `tokens` array. This array must match the Pool's registered tokens. This causes the Vault to call the `IBasePool.onExitPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares to return). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract. Emits a `PoolBalanceChanged` event."
      },
      "flashLoan(address,address[],uint256[],bytes)": {
        "details": "Performs a 'flash loan', sending tokens to `recipient`, executing the `receiveFlashLoan` hook on it, and then reverting unless the tokens plus a proportional protocol fee have been returned. The `tokens` and `amounts` arrays must have the same length, and each entry in these indicates the loan amount for each token contract. `tokens` must be sorted in ascending order. The 'userData' field is ignored by the Vault, and forwarded as-is to `recipient` as part of the `receiveFlashLoan` call. Emits `FlashLoan` events."
      },
      "getActionId(bytes4)": {
        "details": "Returns the action identifier associated with the external function described by `selector`."
      },
      "getAuthorizer()": {
        "details": "Returns the Vault's Authorizer."
      },
      "getDomainSeparator()": {
        "details": "Returns the EIP712 domain separator."
      },
      "getInternalBalance(address,address[])": {
        "details": "Returns `user`'s Internal Balance for a set of tokens."
      },
      "getNextNonce(address)": {
        "details": "Returns the next nonce used by an address to sign messages."
      },
      "getPausedState()": {
        "details": "Returns the current contract pause status, as well as the end times of the Pause Window and Buffer Period."
      },
      "getPool(bytes32)": {
        "details": "Returns a Pool's contract address and specialization setting."
      },
      "getPoolTokenInfo(bytes32,address)": {
        "details": "Returns detailed information for a Pool's registered token. `cash` is the number of tokens the Vault currently holds for the Pool. `managed` is the number of tokens withdrawn and held outside the Vault by the Pool's token Asset Manager. The Pool's total balance for `token` equals the sum of `cash` and `managed`. Internally, `cash` and `managed` are stored using 112 bits. No action can ever cause a Pool's token `cash`, `managed` or `total` balance to be greater than 2^112 - 1. `lastChangeBlock` is the number of the block in which `token`'s total balance was last modified (via either a join, exit, swap, or Asset Manager update). This value is useful to avoid so-called 'sandwich attacks', for example when developing price oracles. A change of zero (e.g. caused by a swap with amount zero) is considered a change for this purpose, and will update `lastChangeBlock`. `assetManager` is the Pool's token Asset Manager."
      },
      "getPoolTokens(bytes32)": {
        "details": "Returns a Pool's registered tokens, the total balance for each, and the latest block when *any* of the tokens' `balances` changed. The order of the `tokens` array is the same order that will be used in `joinPool`, `exitPool`, as well as in all Pool hooks (where applicable). Calls to `registerTokens` and `deregisterTokens` may change this order. If a Pool only registers tokens once, and these are sorted in ascending order, they will be stored in the same order as passed to `registerTokens`. Total balances include both tokens held by the Vault and those withdrawn by the Pool's Asset Managers. These are the amounts used by joins, exits and swaps. For a detailed breakdown of token balances, use `getPoolTokenInfo` instead."
      },
      "getProtocolFeesCollector()": {
        "details": "Returns the current protocol fee module."
      },
      "hasApprovedRelayer(address,address)": {
        "details": "Returns true if `user` has approved `relayer` to act as a relayer for them."
      },
      "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": {
        "details": "Called by users to join a Pool, which transfers tokens from `sender` into the Pool's balance. This will trigger custom Pool behavior, which will typically grant something in return to `recipient` - often tokenized Pool shares. If the caller is not `sender`, it must be an authorized relayer for them. The `assets` and `maxAmountsIn` arrays must have the same length, and each entry indicates the maximum amount to send for each asset. The amounts to send are decided by the Pool and not the Vault: it just enforces these maximums. If joining a Pool that holds WETH, it is possible to send ETH directly: the Vault will do the wrapping. To enable this mechanism, the IAsset sentinel value (the zero address) must be passed in the `assets` array instead of the WETH address. Note that it is not possible to combine ETH and WETH in the same join. Any excess ETH will be sent back to the caller (not the sender, which is important for relayers). `assets` must have the same length and order as the array returned by `getPoolTokens`. This prevents issues when interacting with Pools that register and deregister tokens frequently. If sending ETH however, the array must be sorted *before* replacing the WETH address with the ETH sentinel value (the zero address), which means the final `assets` array might not be sorted. Pools with no registered tokens cannot be joined. If `fromInternalBalance` is true, the caller's Internal Balance will be preferred: ERC20 transfers will only be made for the difference between the requested amount and Internal Balance (if any). Note that ETH cannot be withdrawn from Internal Balance: attempting to do so will trigger a revert. This causes the Vault to call the `IBasePool.onJoinPool` hook on the Pool's contract, where Pools implement their own custom logic. This typically requires additional information from the user (such as the expected number of Pool shares). This can be encoded in the `userData` argument, which is ignored by the Vault and passed directly to the Pool's contract, as is `recipient`. Emits a `PoolBalanceChanged` event."
      },
      "managePoolBalance((uint8,bytes32,address,uint256)[])": {
        "details": "Performs a set of Pool balance operations, which may be either withdrawals, deposits or updates. Pool Balance management features batching, which means a single contract call can be used to perform multiple operations of different kinds, with different Pools and tokens, at once. For each operation, the caller must be registered as the Asset Manager for `token` in `poolId`."
      },
      "manageUserBalance((uint8,address,uint256,address,address)[])": {
        "details": "Performs a set of user balance operations, which involve Internal Balance (deposit, withdraw or transfer) and plain ERC20 transfers using the Vault's allowance. This last feature is particularly useful for relayers, as it lets integrators reuse a user's Vault allowance. For each operation, if the caller is not `sender`, it must be an authorized relayer for them."
      },
      "queryBatchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool))": {
        "details": "Simulates a call to `batchSwap`, returning an array of Vault asset deltas. Calls to `swap` cannot be simulated directly, but an equivalent `batchSwap` call can and will yield the exact same result. Each element in the array corresponds to the asset at the same index, and indicates the number of tokens (or ETH) the Vault would take from the sender (if positive) or send to the recipient (if negative). The arguments it receives are the same that an equivalent `batchSwap` call would receive. Unlike `batchSwap`, this function performs no checks on the sender or recipient field in the `funds` struct. This makes it suitable to be called by off-chain applications via eth_call without needing to hold tokens, approve them for the Vault, or even know a user's address. Note that this function is not 'view' (due to implementation details): the client code must explicitly execute eth_call instead of eth_sendTransaction."
      },
      "registerPool(uint8)": {
        "details": "Registers the caller account as a Pool with a given specialization setting. Returns the Pool's ID, which is used in all Pool-related functions. Pools cannot be deregistered, nor can the Pool's specialization be changed. The caller is expected to be a smart contract that implements either `IGeneralPool` or `IMinimalSwapInfoPool`, depending on the chosen specialization setting. This contract is known as the Pool's contract. Note that the same contract may register itself as multiple Pools with unique Pool IDs, or in other words, multiple Pools may share the same contract. Emits a `PoolRegistered` event."
      },
      "registerTokens(bytes32,address[],address[])": {
        "details": "Registers `tokens` for the `poolId` Pool. Must be called by the Pool's contract. Pools can only interact with tokens they have registered. Users join a Pool by transferring registered tokens, exit by receiving registered tokens, and can only swap registered tokens. Each token can only be registered once. For Pools with the Two Token specialization, `tokens` must have a length of two, that is, both tokens must be registered in the same `registerTokens` call, and they must be sorted in ascending order. The `tokens` and `assetManagers` arrays must have the same length, and each entry in these indicates the Asset Manager for the corresponding token. Asset Managers can manage a Pool's tokens via `managePoolBalance`, depositing and withdrawing them directly, and can even set their balance to arbitrary amounts. They are therefore expected to be highly secured smart contracts with sound design principles, and the decision to register an Asset Manager should not be made lightly. Pools can choose not to assign an Asset Manager to a given token by passing in the zero address. Once an Asset Manager is set, it cannot be changed except by deregistering the associated token and registering again with a different Asset Manager. Emits a `TokensRegistered` event."
      },
      "setAuthorizer(address)": {
        "details": "Sets a new Authorizer for the Vault. The caller must be allowed by the current Authorizer to do this. Emits an `AuthorizerChanged` event."
      },
      "setPaused(bool)": {
        "details": "Safety mechanism to pause most Vault operations in the event of an emergency - typically detection of an error in some part of the system. The Vault can only be paused during an initial time period, after which pausing is forever disabled. While the contract is paused, the following features are disabled: - depositing and transferring internal balance - transferring external balance (using the Vault's allowance) - swaps - joining Pools - Asset Manager interactions Internal Balance can still be withdrawn, and Pools exited."
      },
      "setRelayerApproval(address,address,bool)": {
        "details": "Allows `relayer` to act as a relayer for `sender` if `approved` is true, and disallows it otherwise. Emits a `RelayerApprovalChanged` event."
      },
      "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": {
        "details": "Performs a swap with a single Pool. If the swap is 'given in' (the number of tokens to send to the Pool is known), it returns the amount of tokens taken from the Pool, which must be greater than or equal to `limit`. If the swap is 'given out' (the number of tokens to take from the Pool is known), it returns the amount of tokens sent to the Pool, which must be less than or equal to `limit`. Internal Balance usage and the recipient are determined by the `funds` struct. Emits a `Swap` event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}